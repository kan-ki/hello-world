name: 🚀 Enhanced PR Quality Improvement

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  push:
    branches: [main, develop]

permissions:
  contents: write
  pull-requests: write
  security-events: write
  issues: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 1
  CI: true

jobs:
  # Security & Quality Analysis
  security-analysis:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: |
          npm audit --audit-level=moderate
          npm audit --json > audit-results.json || true
          
      - name: Check for security issues
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const auditResults = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));
              if (auditResults.metadata && auditResults.metadata.vulnerabilities) {
                const vulns = auditResults.metadata.vulnerabilities;
                if (vulns.moderate + vulns.high + vulns.critical > 0) {
                  const comment = `🚨 **Security vulnerabilities detected**\n\n` +
                    `- Moderate: ${vulns.moderate}\n` +
                    `- High: ${vulns.high}\n` +
                    `- Critical: ${vulns.critical}\n\n` +
                    `Please run \`npm audit fix\` to resolve these issues.`;
                  
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: comment
                  });
                }
              }
            } catch (error) {
              console.log('No audit results to process');
            }

  # Code Quality & Auto-Fix
  code-quality:
    name: 🔧 Code Quality & Auto-Fix
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting with auto-fix
        run: |
          echo "::group::ESLint Analysis"
          npm run lint:fix || true
          echo "::endgroup::"
          
      - name: Run formatting
        run: |
          echo "::group::Prettier Formatting"
          npm run format || true
          echo "::endgroup::"
          
      - name: Run tests with coverage
        run: |
          echo "::group::Test Execution"
          npm test -- --coverage --coverageReporters=text --coverageReporters=json-summary
          echo "::endgroup::"
          
      - name: Coverage comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const totalCoverage = coverage.total;
              
              const comment = `📊 **Code Coverage Report**\n\n` +
                `- Lines: ${totalCoverage.lines.pct}%\n` +
                `- Branches: ${totalCoverage.branches.pct}%\n` +
                `- Functions: ${totalCoverage.functions.pct}%\n` +
                `- Statements: ${totalCoverage.statements.pct}%`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('No coverage data available');
            }
            
      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "::notice::Code changes detected - will auto-commit fixes"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "::notice::No code changes needed"
          fi
          
      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        uses: IAreKyleW00t/verified-bot-commit@v1
        with:
          message: |
            🤖 Auto-fix: Apply code quality improvements
            
            - ESLint rule fixes
            - Prettier formatting
            - Code style improvements
            
            Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
            
      - name: Enhanced PR comment
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `✨ **Auto-fix applied successfully!**\n\n` +
              `### Changes made:\n` +
              `- 🔧 ESLint rule fixes\n` +
              `- 💅 Prettier formatting\n` +
              `- 📝 Code style improvements\n\n` +
              `### Next steps:\n` +
              `- Review the changes\n` +
              `- Ensure tests pass\n` +
              `- Ready for review! 🚀`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Update PR status
        if: steps.check-changes.outputs.changes == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **Code quality check passed!**\n\nNo formatting or linting issues found. Your code looks great! 🎉'
            });
            
  # Performance & Bundle Analysis
  performance-analysis:
    name: 📊 Performance Analysis
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Bundle size analysis
        run: |
          echo "::group::Bundle Analysis"
          du -sh node_modules/ || echo "No node_modules directory"
          npm ls --depth=0 || echo "No dependencies"
          echo "::endgroup::"
          
      - name: Performance comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `⚡ **Performance Analysis**\n\n` +
              `- Dependencies analyzed\n` +
              `- Bundle size checked\n` +
              `- Performance metrics available in logs`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });